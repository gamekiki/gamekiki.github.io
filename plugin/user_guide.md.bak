---
title: Plugin - KIKI Widget
---

# KIKI Widget
---

KIKI Widget 사용자 가이드입니다.

- 게임키키#을 사용하기 위해서는 아래와 같은 순서로 코딩 작업을 해 주셔야 합니다.
    1. [위젯 코드 추가](#위젯-코드-추가)
    1. [사용자 로그인 정보 연동](#로그인연동)

## 위젯 코드 추가
---

### 먼저 앱을 등록합니다.

1. [게임키키#](http://www.gamekiki.com) 사이트에서 새로운 앱을 생성합니다. 
    * 앱 만들기 <http://www.gamekiki.com/front/myapp_write.php>
1. 생성된 앱의 `appId(Application ID)` 와 `appSecret(Application Secretkey)`을 메모합니다.
    - <https://www.gamekiki.com/cms/start.php>
    > ![](http://gamekiki.com/metaadmin/assets/data/manual/section_1_1.png)
1. 찬스게임 사용을 원하시는 경우에는 찬스게임 등록 페이지를 참조하시기 바랍니다. 
    - 찬스게임 등록 <http://www.gamekiki.com/front/#step1>

### 다음으로 위젯을 실행시킬 페이지에 라이브러리를 추가합니다.

1. 위젯을 실행시킬 페이지에 게임키키 위젯 라이브러리(`kwidget.js`)를 추가합니다.
```javascript
<script charset="UTF-8" src="http://gamekiki.com/kshop/kwidget/js/kwidget.js"></script>
```

1. 로그인페이지를 지정합니다.
    - 로그인이 되어있다면 위젯 클릭 시 위젯이 정상적으로 작동하게 됩니다.
    - 로그인이 되어있지 않다면 로그인 후 진행해주세요 라는 Alert 표시됩니다.
    - 로그인이 되어있지 않다면 Alert 표시 후 아래에 지정한 페이지로 이동하게 됩니다.
```javascript
kshopMds.loginPage = "./login.html";
```

1. 위젯 실행 및 AppID 설정합니다
    - 위젯을 실행하기 위해 init 함수를 호출하여 줍니다.
    - [게임키키#](http://www.gamekiki.com) 사이트에서 등록된 AppId를 지정하여 줍니다.
```javascript
kshopMds.init({
    appId : "app_NWMUorVo00000" 
}); 
```

1. 실제 웹페이지에서 설정하는 예는 아래와 같습니다.
```html
<html>
    <head>
    <meta charset="UTF-8"></meta>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

    <script charset="UTF-8" src="http://gamekiki.com/kshop/kwidget/js/kwidget.js"></script>
    <script>
        // 사용자 미로그인 시 로그인 redirect 페이지 (필수)
        // 사용자의 로그인 페이지로 변경해야함
        kshopMds.loginPage = "./login.html";

        // 사용자 사이트에서 로그인 정보가 있는지 없는지 확인
        var loginCookie = true;
        window.addEventListener("DOMContentLoaded", function(){
            if(loginCookie){
                // 자동 로그인
                kshopMds.init({
                  appId : appId, // appId (필수)
                  userId : userId,
                  appSecret : appSecret
                });
            }else{
                // 클릭 시 로그인 페이지로 이동
                kshopMds.init({
                  appId : appId,
                  autoLogin : "N"
                });
            }
        },false);
    </head>
    <body>
    </body>
</html>
```


## 로그인연동
---

- 게임키키 위젯은 사용자의 ID별로 발급된 토큰을 기반으로 동작합니다. 
- 토큰 발급은 [REST API](#restAPI)를 직접 호출하거나 개발환경 별로 제공하는 모듈을 사용하여 발급 할 수 있습니다.
- 위젯에서는 cookie에 저장된 토큰을 확인하게 되는데 cookie에 저장하는 방식은 아래 두가지 방법으로 하실 수 있습니다.
    1. 키키위젯 라이브러리에서 제공하는 [`kshopMds.saveUserInfo` 함수 사용](#saveUserInfo)
    1. 토큰 값을 안내된 형식으로 [직접 cookie에 저장](#direct)

<a name="restAPI"></a>
### REST API 로그인 연동

1. [Login REST API](http://docs.gamekiki.com/openapi/user/login.html)를 참조해서 로그인 토큰 발급합니다.
1. 실제 페이지에서 사용하는 예는 아래와 같습니다.
```php
<?php

class kikiClass{
    var $kikiAPIAddr = "http://gamekiki.com:3000";

    public function login($appId, $userId, $appSecret, $mgId=null){
        $respObj = $this->requestToken($appId, $userId, $appSecret);
        if(strpos($respObj["message"], "succeed") !== false){
            if(null === $mgId){
                $this->saveUserInfo($appId, $userId, $respObj["token"]);          
            }else{
                $this->saveUserInfo($appId, $userId, $respObj["token"], $mgId);
            }
            $respObj["prog"] = true;
        }else{
            $respObj["prog"] = false;
        }

        return $respObj;        
    }    
    
    function requestToken($appId, $userId, $appSecret){
        $token = false;
        $service_url = $this->kikiAPIAddr."/login?";
        $UserIP = $_SERVER["REMOTE_ADDR"];
        $curl_post_data = 
            "appId=".$appId.
            "&userId=".$userId.
            "&loginType=E&IP=".$UserIP.
            "&secretKey=".$appSecret.
            "&svcType=login";
            
        $svrName ='http://'. $_SERVER['SERVER_NAME'] . $_SERVER['REQUEST_URI'];
        // 토큰요청 응답 값    
        $curl_response = $this->curl_post_kiki($service_url, $curl_post_data,$svrName); 
        $respObj = json_decode($curl_response, true);
        return $respObj;
    }
        
    function curl_post_kiki($url, $post_data,$svrName) {
        $curl = curl_init($url);
        $curl_post_data = $post_data; 
        curl_setopt($curl, CURLOPT_HEADER,  0);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_POST, true);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $curl_post_data);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);

        curl_setopt($curl, CURLOPT_REFERER, $svrName);
        $ge = curl_exec($curl);
        $curl_response = ($ge);
        if ($curl_response === false) {
            $info = curl_getinfo($curl);
            curl_close($curl);
            die('error occured during curl exec. Additioanl info: ' . var_export($info));
        }
        curl_close($curl);
        return $curl_response;
    }   
}

?>
```


<a name="saveUserInfo"></a>
### 키키위젯에서 제공하는 함수를 사용한 쿠키 저장
```javascript
<script charset="UTF-8" src="http://gamekiki.com/kshop/kwidget/js/kwidget.js"></script>
<script>
    kshopMds.saveUserInfo({
        appId : "app_NM00001",
        userId : "user0001",
        token : "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhcHBJZCI6ImFwcF9OV01Vb3.cklkIjoiUmF0bTA0MjQi"
    })
</script>
```


<a name="direct"></a>
### 직접 쿠키에 저장
1. API를 통해 발급받은 JSON 데이터에서 "token" 값을 추출합니다.
    - 받는 메세지
```javascript
{
    "message": "succeed to login.",
    "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.ey....."
}
```
    - 추출한 토큰값 
```javascript
"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhcHBJZCI6ImFwcF9OV01Vb3.cklkIjoiUmF0bTA0MjQi";
```

1. token의 결과값을 `.`을 기준으로 3등분 합니다. 
```javascript
"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9","eyJhcHBJZCI6ImFwcF9OV01Vb3","cklkIjoiUmF0bTA0MjQi"
```

1. 위의 3등분한 토큰값을 사용자 Id, appId 정보와 함께 아래의 키값으로 브라우저의 쿠키에 저장시켜 줍니다.

key | value | description
--- | --- | ---
kiki_wg_pId | "app_NM00001" | 어플리케이션 id 
kiki_wg_uId | "user001" | 사용자의 userId 
kiki_wg_tk_fr | "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9" | 3등분한 토큰값 중 첫번째 
kiki_wg_tk_sc | "eyJhcHBJZCI6ImFwcF9OV01Vb3" | 3등분한 토큰값 중 두번째 
kiki_wg_tk_tr | "cklkIjoiUmF0bTA0MjQi" | 3등분한 토큰값 중 세번째 

